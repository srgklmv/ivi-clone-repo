version: "3.9"

services:

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.11.3-management
    restart: always
    ports:
      - "5672"

  api_gateway:
    container_name: api_gateway
    build:
      context: ./ivi-clone-api-gateway
      dockerfile: ./Dockerfile
#      target: production
    ports:
      - "3100:3100"
    restart: always

  auth:
    container_name: auth
    build:
      context: ./ivi-clone-auth-ms
      dockerfile: ./Dockerfile
      target: development
    restart: always
    depends_on:
      - auth_pg

  auth_pg:
    container_name: auth_pg
    image: postgres:15.2-alpine
    environment:
      POSTGRES_DB: auth
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - "5432"
    restart: always

  comments:
    container_name: comments
    build:
      context: ./ivi-clone-comments-ms
      dockerfile: ./Dockerfile
      target: development
    restart: always
    depends_on:
      - comments_pg

  comments_pg:
    container_name: comments_pg
    image: postgres:15.2-alpine
    environment:
      POSTGRES_DB: comments
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - "5432"
    restart: always

  genres:
    container_name: genres
    build:
      context: ./ivi-clone-genres-ms
      dockerfile: ./Dockerfile
#      target: production
    restart: always
    depends_on:
      - genres_pg

  genres_pg:
    container_name: genres_pg
    image: postgres:15.2-alpine
    environment:
      POSTGRES_DB: genres
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - "5432"
    restart: always

  movies:
    container_name: movies
    build:
      context: ./ivi-clone-movies-ms
      dockerfile: ./Dockerfile
#      target: production
    restart: always
    depends_on:
      - movies_pg

  movies_pg:
    container_name: movies_pg
    image: postgres:15.2-alpine
    environment:
      POSTGRES_DB: movies
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - "5432"
    restart: always

#  persons:
#    container_name: persons
#    build:
#      context: ./ivi-clone-persons-ms
#      dockerfile: ./Dockerfile
#      target: production
#    restart: always
#    depends_on:
#      - persons_pg
#
#  persons_pg:
#    container_name: persons_pg
#    image: postgres:15.2-alpine
#    environment:
#      POSTGRES_DB: persons
#      POSTGRES_USER: admin
#      POSTGRES_PASSWORD: admin
#    ports:
#      - "5432"
#    restart: always

  profiles:
    container_name: profiles
    build:
      context: ./ivi-clone-profiles-ms
      dockerfile: ./Dockerfile
      target: development
    restart: always
    depends_on:
      - profiles_pg

  profiles_pg:
    container_name: profiles_pg
    image: postgres:15.2-alpine
    environment:
      POSTGRES_DB: profiles
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - "5432"
    restart: always

  roles:
    container_name: roles
    build:
      context: ./ivi-clone-roles-ms
      dockerfile: ./Dockerfile
      target: development
    restart: always
    depends_on:
      - roles_pg

  roles_pg:
    container_name: roles_pg
    image: postgres:15.2-alpine
    environment:
      POSTGRES_DB: roles
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - "5432"
    restart: always
